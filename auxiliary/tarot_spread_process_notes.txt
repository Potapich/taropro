
Памятка-файл: Как работает выбор и проведение расклада Таро

1. Старт: выбор расклада пользователем
- Пользователь заходит на страницу "Расклады Таро".
- Сайт динамически загружает список раскладов из spreads.json:
  - Название расклада (title)
  - Краткое описание (short_summary)
  - Категорию / тему (theme)
- Пользователь выбирает нужный расклад.

2. Отображение подробностей расклада
- Сайт вытягивает полные данные о раскладе из spreads.json:
  - Полное описание (description)
  - Когда рекомендуется использовать (recommended_use)
  - Для кого подходит (suitable_for)
  - Сложность расклада (difficulty)
  - Тип расклада (spread_type)
  - Структуру карт (structure_description)
  - Энергию (energy)
  - Рефлексивный вопрос (reflection_question)
- Пользователь читает и нажимает кнопку «Начать расклад».

3. Проведение расклада
- Система смотрит cards_count (сколько карт нужно вытянуть).
- Случайным образом тянутся карты из колоды.
- Для каждой карты фиксируется:
  - Название карты (title)
  - Положение карты (прямое или перевернутое)

4. Генерация описания карт
- Сайт обращается к базе card_fool_structure_ready.json.
- Для каждой карты подгружается:
  - Основное описание карты (main_description)
  - Аспект расклада (по настройкам позиции или вопроса)
  - Значение карты в прямом или перевернутом положении (upright/reversed)
- На уровне 2.0 дополнительно учитывается позиция карты.

5. Финальный результат расклада
Пользователь видит:
- Названия карт и их позиции
- Краткое описание каждой карты + значение по теме расклада
- Итоговое резюме расклада (если нужно)

Схема связей файлов:
spreads.json ➡️ показывает список раскладов и их структуру
       ⬇️
user выбирает расклад
       ⬇️
card_fool_structure_ready.json ➡️ подгружает описания вытянутых карт

Мини-графическая схема процесса:
[Выбор расклада] → [Описание расклада] → [Выбор карт] → [Интерпретация карт] → [Готовый результат]

ИТОГО:
- spreads.json нужен для начала процесса.
- card_fool_structure_ready.json нужен для интерпретации карт.
